== Physical Plan ==
AdaptiveSparkPlan (9)
+- == Final Plan ==
   ResultQueryStage (6)
   +- * Sort (5)
      +- AQEShuffleRead (4)
         +- ShuffleQueryStage (3), Statistics(sizeInBytes=1059.9 KiB, rowCount=1.93E+4)
            +- Exchange (2)
               +- * Scan ExistingRDD (1)
+- == Initial Plan ==
   Sort (8)
   +- Exchange (7)
      +- Scan ExistingRDD (1)


(1) Scan ExistingRDD [codegen id : 1]
Output [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: [x#162, y#163, pmi#164, count#165L], MapPartitionsRDD[90] at applySchemaToPythonRDD at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)

(2) Exchange
Input [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: rangepartitioning(pmi#164 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [plan_id=426]

(3) ShuffleQueryStage
Output [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: 0

(4) AQEShuffleRead
Input [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: coalesced

(5) Sort [codegen id : 2]
Input [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: [pmi#164 DESC NULLS LAST], true, 0

(6) ResultQueryStage
Output [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: 1

(7) Exchange
Input [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: rangepartitioning(pmi#164 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [plan_id=419]

(8) Sort
Input [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: [pmi#164 DESC NULLS LAST], true, 0

(9) AdaptiveSparkPlan
Output [4]: [x#162, y#163, pmi#164, count#165L]
Arguments: isFinalPlan=true


